[
    {
        "id": 16,
        "Name": "q_16",
        "quesHead": "Merge_Sort",
        "quesDesc": "Write a program to implement the merge sort algorithm.",
        "testcases": [
            {
                "input": [
                    38,
                    27,
                    43,
                    3,
                    9,
                    82,
                    10
                ],
                "expectedOutput": "[3, 9, 10, 27, 38, 43, 82]"
            },
            {
                "input": [
                    5,
                    2,
                    9,
                    1,
                    5,
                    6
                ],
                "expectedOutput": "[1, 2, 5, 5, 6, 9]"
            }
        ],
        "return": "int[]"
    },
    {
        "id": 17,
        "Name": "q_17",
        "quesHead": "Quick_Sort",
        "quesDesc": "Write a program to implement the quick sort algorithm.",
        "testcases": [
            {
                "input": [
                    10,
                    7,
                    8,
                    9,
                    1,
                    5
                ],
                "expectedOutput": "[1, 5, 7, 8, 9, 10]"
            },
            {
                "input": [
                    3,
                    6,
                    8,
                    10,
                    1,
                    2,
                    1
                ],
                "expectedOutput": "[1, 1, 2, 3, 6, 8, 10]"
            }
        ],
        "return": "int[]"
    },
    {
        "id": 18,
        "Name": "q_18",
        "quesHead": "Knapsack_Problem",
        "quesDesc": "Write a program to solve the 0/1 knapsack problem.",
        "testcases": [
            {
                "input": {
                    "weights": [
                        10,
                        20,
                        30
                    ],
                    "values": [
                        60,
                        100,
                        120
                    ],
                    "capacity": 50
                },
                "expectedOutput": "220"
            }
        ],
        "return": "int"
    },
    {
        "id": 19,
        "Name": "q_19",
        "quesHead": "N-Queens_Problem",
        "quesDesc": "Write a program to solve the N-Queens problem for a given N.",
        "testcases": [
            {
                "input": 4,
                "expectedOutput": "[[\".Q..\",\"...Q\",\"Q...\",\"..Q.\"],[\"..Q.\",\"Q...\",\"...Q\",\".Q..\"]]"
            },
            {
                "input": 5,
                "expectedOutput": "[[\"Q....\",\"..Q..\",\"....Q\",\".Q...\",\"...Q.\"],...]"
            }
        ],
        "return": "String[][]"
    },
    {
        "id": 20,
        "Name": "q_20",
        "quesHead": "Dijkstra's_Algorithm",
        "quesDesc": "Write a program to implement Dijkstra's algorithm for finding the shortest path in a graph.",
        "testcases": [
            {
                "input": {
                    "graph": [
                        [
                            0,
                            4,
                            0,
                            0,
                            0,
                            0,
                            0,
                            8,
                            0
                        ],
                        [
                            4,
                            0,
                            8,
                            0,
                            0,
                            0,
                            0,
                            11,
                            0
                        ],
                        [
                            0,
                            8,
                            0,
                            7,
                            0,
                            4,
                            0,
                            0,
                            2
                        ],
                        [
                            0,
                            0,
                            7,
                            0,
                            9,
                            14,
                            0,
                            0,
                            0
                        ],
                        [
                            0,
                            0,
                            0,
                            9,
                            0,
                            10,
                            0,
                            0,
                            0
                        ],
                        [
                            0,
                            0,
                            4,
                            14,
                            10,
                            0,
                            2,
                            0,
                            0
                        ],
                        [
                            0,
                            0,
                            0,
                            0,
                            0,
                            2,
                            0,
                            1,
                            6
                        ],
                        [
                            8,
                            11,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            7
                        ],
                        [
                            0,
                            0,
                            2,
                            0,
                            0,
                            0,
                            6,
                            7,
                            0
                        ]
                    ],
                    "start": 0
                },
                "expectedOutput": "[0, 4, 12, 19, 21, 11, 9, 8, 14]"
            }
        ],
        "return": "int[]"
    }
]